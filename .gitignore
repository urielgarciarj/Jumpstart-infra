# Local .terraform directories
.terraform/

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Ignore transient lock info files created by terraform apply
.terraform.tfstate.lock.info

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc

# Ansible related files to ignore

# SSH key files
*.pem
*.key

# Vault password files
.vault_pass.txt

# Inventory files with sensitive data
inventory.ini
hosts

# Ansible retry files
*.retry

# Ansible log files
ansible.log

# Encrypted variable files (if not meant for version control)
group_vars/*vault.yml
host_vars/*vault.yml

# Collections and roles downloaded via ansible-galaxy
collections/
roles/

# Fact cache
.fact_cache/

# Molecule test output
.molecule/

# Python virtual environments (if used for ansible)
.venv/
venv/